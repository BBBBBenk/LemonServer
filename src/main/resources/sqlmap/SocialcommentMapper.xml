<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mimumi.lemonserver.mapper.SocialcommentMapper">
  <resultMap id="BaseResultMap" type="com.mimumi.lemonserver.entity.Socialcomment">
    <id column="commentid" jdbcType="INTEGER" property="commentid" />
    <result column="socialid" jdbcType="INTEGER" property="socialid" />
    <result column="fromuid" jdbcType="INTEGER" property="fromuid" />
    <result column="touid" jdbcType="INTEGER" property="touid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="modifytime" jdbcType="TIMESTAMP" property="modifytime" />
    <association property="sender" select="com.mimumi.lemonserver.mapper.UserMapper.getLimitByUserId" column="fromuid"
                 javaType="com.mimumi.lemonserver.entity.User">
    </association>
    <association property="receiver" select="com.mimumi.lemonserver.mapper.UserMapper.getLimitByUserId" column="touid"
                 javaType="com.mimumi.lemonserver.entity.User">
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    commentid, socialid, fromuid, touid, content, createtime, modifytime
  </sql>

  <select id="geCommentList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from socialcomment
    where socialid = #{socialid,jdbcType=INTEGER}
  </select>

  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from socialcomment
    where commentid = #{commentid,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from socialcomment
    where commentid = #{commentid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mimumi.lemonserver.entity.Socialcomment">
    insert into socialcomment (commentid, socialid, fromuid, 
      touid, content, createtime, 
      modifytime)
    values (#{commentid,jdbcType=INTEGER}, #{socialid,jdbcType=INTEGER}, #{fromuid,jdbcType=INTEGER}, 
      #{touid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{modifytime,jdbcType=TIMESTAMP})
  </insert>
  <update id="update" parameterType="com.mimumi.lemonserver.entity.Socialcomment">
    update socialcomment
    set socialid = #{socialid,jdbcType=INTEGER},
      fromuid = #{fromuid,jdbcType=INTEGER},
      touid = #{touid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      modifytime = #{modifytime,jdbcType=TIMESTAMP}
    where commentid = #{commentid,jdbcType=INTEGER}
  </update>
</mapper>